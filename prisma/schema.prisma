generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // url      = "postgresql://postgres:admin123@192.168.0.10:5432/TurkishFir1807_DB?schema=public&connection_limit=5"
  url      = "postgresql://postgres:postgres@172.18.0.2:5432/TurkishFir1807_DB?schema=public&connection_limit=5"
}

model TBL_USUARIOS {
  id                String    @id @default(uuid())
  nombre            String
  correoElectronico String
  contrasena        String
  ultimaConexion    DateTime? @default(now())
  imagenPerfil      String?
  estado            String?   @default("Activo") // * Bloqueado, Activo, etc...
  id_rel_role       String

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  relPermisosRoles TBL_REL_PERMISOS_ROLES @relation(fields: [id_rel_role], references: [id])
}

model TBL_ROLES {
  id               String                   @id @default(uuid())
  nombre           String
  descripcion      String
  relPermisosRoles TBL_REL_PERMISOS_ROLES[]
}

model TBL_PERMISOS {
  id          String   @id @default(uuid())
  nombre      String
  descripcion String
  acciones    String[]

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  relPermisosRoles TBL_REL_PERMISOS_ROLES[]
}

model TBL_REL_PERMISOS_ROLES {
  id         String @id @default(uuid())
  id_role    String
  id_permiso String

  roles    TBL_ROLES      @relation(fields: [id_role], references: [id])
  permisos TBL_PERMISOS   @relation(fields: [id_permiso], references: [id])
  usuarios TBL_USUARIOS[]
}

model TBL_CLIENTES {
  id              String   @id @default(uuid())
  DNI             String   @unique
  primerNombre    String
  segundoNombre   String
  primerApellido  String
  segundoApellido String?
  otroNombre      String
  telefono        String
  fechaNacimiento DateTime
  fechaDeIngreso  DateTime //* Se guardara la fecha actual en la que se registro el cliente

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  // municipio TBL_MUNICIPIO @relation(fields: [id_municipio], references: [id], onDelete: NoAction)

  rutinas          TBL_RUTINAS[]
  chequeos         TBL_INFORMACIONCHEQUEO[]
  contratos        TBL_CONTRATOS[]
  relClienteRutina TBL_REL_CLIENTE_RUTINA[]
}

// model TBL_MUNICIPIO {
//   id     String @id @default(uuid())
//   nombre String
//   codigo String @unique

//   createdAt DateTime?      @default(now())
//   updatedAt DateTime?      @updatedAt
//   clientes  TBL_CLIENTES[]
// }

model TBL_CONTRATOS {
  id               String   @id @default(uuid())
  descripcion      String?
  fechaDeInicio    DateTime
  fechaDeFin       DateTime
  ultimaRenovacion DateTime
  estado           String //* Vencido o Activo -> Activarselo una vez que el Cliente Pague
  id_cliente       String

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  clientes TBL_CLIENTES @relation(fields: [id_cliente], references: [id], onDelete: Cascade)
}

model TBL_INFORMACIONCHEQUEO {
  id              String   @id @default(uuid())
  peso            String
  estatura        String
  nivelDeMasa     String?
  nivelDeGrasa    String?
  fechaDelChequeo DateTime
  id_cliente      String // TODO Se guardara automaticamente al hacer el chequeo...

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  clientes TBL_CLIENTES @relation(fields: [id_cliente], references: [id], onDelete: Cascade)
}

model TBL_RUTINAS {
  id                    String @id @default(uuid())
  nombre                String
  cantidad_series       Int
  cantidad_repeticiones Int
  tiempo_descanso       Float //* En minutos

  id_ejercicio          String
  id_objetivosCatalogos String
  id_cliente            String

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  ejercicios TBL_EJERCICIO @relation(fields: [id_ejercicio], references: [id])
  clientes   TBL_CLIENTES  @relation(fields: [id_cliente], references: [id], onDelete: Cascade)
}

model TBL_EJERCICIO {
  id          String  @id @default(uuid())
  nombre      String
  descripcion String
  imagen      String?
  id_tipo     String

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  tipoEjercicios TBL_TIPOSEJERCICIOS @relation(fields: [id_tipo], references: [id])
  rutinas        TBL_RUTINAS[]
}

model TBL_EJERCICIO_RUTINA {
  id                       String                     @id @default(uuid())
  nombre                   String
  createdAt                DateTime?                  @default(now())
  updatedAt                DateTime?                  @updatedAt
  TBL_REL_RUTINA_EJERCICIO TBL_REL_RUTINA_EJERCICIO[]
}

model TBL_RUTINA_ENTRENAMIENTO {
  id                       String                     @id @default(uuid())
  nombre                   String
  createdAt                DateTime?                  @default(now())
  updatedAt                DateTime?                  @updatedAt
  TBL_REL_RUTINA_EJERCICIO TBL_REL_RUTINA_EJERCICIO[]
  TBL_REL_CLIENTE_RUTINA   TBL_REL_CLIENTE_RUTINA[]
}

model TBL_REL_RUTINA_EJERCICIO {
  id                      String @id @default(uuid())
  id_rutina_entrenamiento String
  id_ejercicio_rutina     String
  series                  String
  repeticiones            String

  ejercicioRutina     TBL_EJERCICIO_RUTINA     @relation(fields: [id_ejercicio_rutina], references: [id])
  rutinaEntrenamiento TBL_RUTINA_ENTRENAMIENTO @relation(fields: [id_rutina_entrenamiento], references: [id])
}

model TBL_REL_CLIENTE_RUTINA {
  id         String @id @default(uuid())
  id_cliente String
  id_rutina  String

  cliente             TBL_CLIENTES             @relation(fields: [id_cliente], references: [id])
  rutinaEntrenamiento TBL_RUTINA_ENTRENAMIENTO @relation(fields: [id_rutina], references: [id])
}

model TBL_TIPOSEJERCICIOS {
  id          String @id @default(uuid())
  nombreTipo  String
  descripcion String

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  ejercicios TBL_EJERCICIO[]
}

// qwe
