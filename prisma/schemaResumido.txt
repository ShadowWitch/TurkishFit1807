generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TBL_USUARIOS {
  id                String    @id @default(uuid())
  nombre            String
  correoElectronico String
  contrasena        String
  ultimaConexion    DateTime? @default(now())
  imagenPerfil      String?
  estado            String    @default("Activo") // * Bloqueado, Activo, etc...
  id_role           String

  TBL_ROLES TBL_ROLES @relation(fields: [id_role], references: [id])
}

model TBL_ROLES {
  id                     String                   @id @default(uuid())
  nombre                 String
  descripcion            String
  TBL_REL_PERMISOS_ROLES TBL_REL_PERMISOS_ROLES[]
  TBL_USUARIOS           TBL_USUARIOS[]
}

model TBL_PERMISOS {
  id                     String                   @id @default(uuid())
  nombre                 String
  descripcion            String
  acciones               String[]
  TBL_REL_PERMISOS_ROLES TBL_REL_PERMISOS_ROLES[]
}

model TBL_REL_PERMISOS_ROLES {
  id         String @id @default(uuid())
  id_role    String
  id_permiso String

  TBL_ROLES    TBL_ROLES    @relation(fields: [id_role], references: [id])
  TBL_PERMISOS TBL_PERMISOS @relation(fields: [id_permiso], references: [id])
}

model TBL_CLIENTES {
  id                 String   @id @default(uuid())
  DNI                String
  primerNombre       String
  segundoNombre      String
  primerApellido     String
  segundoApellido    String?
  otroNombre         String
  telefono           String
  telefono2          String?
  correo             String?
  fechaNacimiento    DateTime
  direccionDetallada String
  fechaDeIngreso     DateTime //* Se guardara la fecha actual en la que se registro el cliente
  id_municipio       String
  id_contrato        String

  Municipio TBL_MUNICIPIO @relation(fields: [id_municipio], references: [id])
  Contratos TBL_CONTRATOS @relation(fields: [id_contrato], references: [id])

  TBL_PAGOS              TBL_PAGOS[]
  TBL_RUTINAS            TBL_RUTINAS[]
  TBL_INFORMACIONCHEQUEO TBL_INFORMACIONCHEQUEO[]
}

model TBL_MUNICIPIO {
  id              String         @id @default(uuid())
  nombre          String
  codigo          String
  id_departamento String
  TBL_CLIENTES    TBL_CLIENTES[]
}

model TBL_CONTRATOS {
  id               String         @id @default(uuid())
  descripcion      String?
  fechaDeInicio    DateTime
  fechaDeFin       DateTime
  ultimaRenovacion DateTime
  id_pago          String
  estado           String //* Vencido o Activo -> Activarselo una vez que el Cliente Pague
  TBL_PAGOS        TBL_PAGOS      @relation(fields: [id_pago], references: [id])
  TBL_CLIENTES     TBL_CLIENTES[]
}

model TBL_PAGOS {
  id             String          @id @default(uuid())
  cantidadPagada Int
  fechaPago      DateTime
  estadoPago     String //* Pagado o No - Esta se guardar por defecto en pagado una vez se haga el pago y se volvera a poner en NO pagado cuando termine su contrato.
  id_cliente     String // TODO Se guardara automaticamente...
  TBL_CLIENTES   TBL_CLIENTES    @relation(fields: [id_cliente], references: [id])
  TBL_CONTRATOS  TBL_CONTRATOS[]
}

model TBL_INFORMACIONCHEQUEO {
  id              String   @id @default(uuid())
  peso            Float    @default(0.00)
  estatura        String
  nivelDeMasa     String?
  nivelDeGrasa    String?
  fechaDelChequeo DateTime
  id_cliente      String // TODO Se guardara automaticamente al hacer el chequeo...

  TBL_CLIENTES TBL_CLIENTES   @relation(fields: [id_cliente], references: [id])
  TBL_PROGRESO TBL_PROGRESO[]
}

model TBL_PROGRESO {
  id         String @id @default(uuid())
  peso       Float? @default(0.00)
  perdida    Float? @default(0.00)
  id_chequeo String

  TBL_INFORMACIONCHEQUEO TBL_INFORMACIONCHEQUEO @relation(fields: [id_chequeo], references: [id])
}

model TBL_RUTINAS {
  id                    String @id @default(uuid())
  nombre                String
  cantidad_series       Int
  cantidad_repeticiones Int
  tiempo_descanso       Float //* En minutos

  id_ejercicio          String
  id_objetivosCatalogos String
  id_cliente            String

  TBL_EJERCICIO TBL_EJERCICIO @relation(fields: [id_ejercicio], references: [id])
  TBL_CLIENTES  TBL_CLIENTES  @relation(fields: [id_cliente], references: [id])
}

model TBL_EJERCICIO {
  id                  String              @id @default(uuid())
  nombre              String
  descripcion         String
  imagen              String?
  id_tipo             String
  TBL_TIPOSEJERCICIOS TBL_TIPOSEJERCICIOS @relation(fields: [id_tipo], references: [id])
  TBL_RUTINAS         TBL_RUTINAS[]
}

model TBL_TIPOSEJERCICIOS {
  id            String          @id @default(uuid())
  nombreTipo    String
  descripcion   String
  TBL_EJERCICIO TBL_EJERCICIO[]
}

// qwe
